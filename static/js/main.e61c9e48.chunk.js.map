{"version":3,"sources":["contexts/Localisation/translationsContext.ts","utils/formatBalance.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","utils/getRpcUrl.ts","contexts/RefreshContext.tsx","state/actions.ts","hooks/useTokenBalance.ts","hooks/useRefferal.ts","config/constants/types.ts","utils/addressHelpers.ts","utils/erc20.ts","utils/multicall.ts","config/constants/contracts.ts","config/constants/pools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","hooks/useRefresh.ts","config/constants/farms.ts","utils/web3.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","views/Refferal/components/RefferalLink.tsx","views/Refferal/components/CardValue.tsx","views/Refferal/components/Refferals.tsx","views/Refferal/components/RefferalCardno3.tsx","views/Refferal/components/RefferalCardno2.tsx","views/Refferal/components/RefferalCardno1.tsx","views/Refferal/Refferal.tsx","views/Refferal/components/CakeStats.tsx","views/Aboutexchange/Aboutexchange.tsx","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","App.tsx","contexts/BlockContext.tsx","state/index.ts","Providers.tsx","index.tsx","state/fetchTokenPrice.ts","state/fetchBNBPrice.ts","state/hooks.ts","components/layout/Container.tsx","components/layout/Page.tsx"],"names":["defaultTranslationState","translations","setTranslations","TranslationsContext","createContext","getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","console","log","calls","address","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","div","tokenSymbol","QuoteToken","BUSD","quoteTokenSymbol","tokenPriceVsQuote","USDT","DAI","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","pid","info","totalAllocPoint","ecgPerBlock","allocPoint","_hex","poolWeight","toJSON","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","nodes","process","getNodeUrl","randomIndex","random","length","RefreshContext","React","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","useTotalSupply","slowRefresh","useRefresh","totalSupply","setTotalSupply","cakeContract","getContract","cakeABI","getCakeAddress","methods","call","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","setBalance","balanceOf","bal","fetchBalance","useTokenBalance","useWallet","ethereum","fastRefresh","getTokenBalance","res","useRefferal","refferdBy","totalRfferal","totalReferralCommissions","result","setResults","getRefferalAddress","refferalAbi","rawResults","fetchBalances","PoolCategory","addresses","cake","chainId","masterChef","getMulticallAddress","mulltiCall","getWbnbAddress","wbnb","getLotteryAddress","lottery","getLotteryTicketAddress","lotteryNFT","refferal","provider","Web3","eth","Contract","userAddress","contract","abi","web3","getWeb3","multi","MultiCallAbi","itf","Interface","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","i","decodeFunctionResult","usdt","dai","busd","pools","nonBnbPools","poolsConfig","filter","p","stakingTokenName","BNB","bnbPools","nonMasterPools","sousId","masterChefContract","masterChefABI","fetchPoolsAllowance","stakingTokenAddress","contractAddress","allowances","reduce","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","sousChefABI","userInfo","stakedBalances","amount","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingECG","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","useContext","risk","lpSymbol","contracts","token1","token2","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","contractOptions","variableRegex","getTranslation","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","StyledTotalValueLockedCard","styled","Card","RefferalLink","style","fontSize","mb","window","location","href","onCopy","fullWidth","slice","CardValue","prefix","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","current","bold","RefferalCard","size","color","StyledInvitingCard","theme","mediaQueries","sm","RefferalCard3","background","textAlign","src","alt","margin","width","display","marginTop","RefferalCard2","RefferalCard1","Hero","lg","Cards","BaseLayout","Div","Row","Refferal","Page","height","StyledCakeStats","CakeStats","TranslateString","burnedBalance","useFarms","eggPrice","usePriceCakeBusd","circSupply","minus","cakeSupply","marketCap","Aboutexchange","as","GlobalStyle","createGlobalStyle","colors","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","storedLangCode","localStorage","getItem","storedLang","getStoredLang","fetch","then","r","json","translationApiResponse","catch","e","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","config","label","icon","items","Menu","props","connect","reset","cakePriceUsd","login","logout","currentLang","langs","setLang","links","priceLink","networkName","networkLink","Wrapper","PageLoader","Home","lazy","Farms","NotFound","Airdrop","EXPONENTIAL_AT","DECIMAL_PLACES","App","param","URLSearchParams","search","getAll","useFetchPublicData","Global","path","exact","tokenMode","component","memo","BlockContext","BlockContextProvider","previousBlock","block","setBlock","getBlockNumber","blockNumber","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","useGetPriceData","setData","axios","get","resp","priceUSD","fetchData","useGetBNBPriceData","price","useDispatch","useSelector","useFarmFromPid","useFarmUser","usePriceBnbBusd","useTotalValue","bnbPrice","cakePrice","val","CAKE","plus","Container"],"mappings":"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","file":"static/js/main.e61c9e48.chunk.js","sourcesContent":["import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { QuoteToken } from '../../config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      console.log(lpAdress, \"lpaddess\")\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [tokenBalanceLP, quoteTokenBlanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n        await multicall(erc20, calls)\n\n      let tokenAmount\n      let lpTotalInQuoteToken\n      let tokenPriceVsQuote\n      if (farmConfig.isTokenOnly) {\n        console.log(\"in iS token\")\n        console.log(new BigNumber(tokenBalanceLP).toNumber(), new BigNumber(quoteTokenBlanceLP).toNumber(), \"in is token\");\n\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals))\n        if (farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD) {\n          tokenPriceVsQuote = new BigNumber(1)\n        } \n        if (farmConfig.tokenSymbol === QuoteToken.USDT && farmConfig.quoteTokenSymbol === QuoteToken.USDT) {\n          tokenPriceVsQuote = new BigNumber(1)\n        }\n        if (farmConfig.tokenSymbol === QuoteToken.DAI && farmConfig.quoteTokenSymbol === QuoteToken.DAI) {\n          tokenPriceVsQuote = new BigNumber(1)\n        }\n        else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote)\n      } else {\n        console.log(\"in is token false\", new BigNumber(quoteTokenBlanceLP).toNumber(), \"lpaddess\")\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // console.log(new BigNumber(lpTotalInQuoteToken).toNumber(), \"in is token lptoken ratio\");\n\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        console.log(new BigNumber(lpTotalInQuoteToken).toNumber(), \"in is token lptoken ratio\");\n\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n\n        console.log(new BigNumber(tokenAmount).toNumber(), \"in is token lptoken ratio\");\n\n        // .times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        console.log(new BigNumber(quoteTokenAmount).toNumber(), \"in is token lptoken ratio\");\n\n\n        if (tokenAmount.comparedTo(0) > 0) {\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\n          console.log(new BigNumber(tokenPriceVsQuote).toNumber(), \"in is token lptoken ratio\");\n\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n      }\n\n      const [info, totalAllocPoint, ecgPerBlock] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'ecgPerBlock',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        ecgPerBlock: new BigNumber(ecgPerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingECG',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport multicall from 'utils/multicall'\nimport { getRefferalAddress } from 'utils/addressHelpers'\nimport refferalAbi from 'config/abi/refferal.json'\n\nimport useRefresh from './useRefresh'\n\nconst useRefferal = () => {\n  const { account } = useWallet()\n  const { fastRefresh } = useRefresh()\n  const [result, setResults] = useState({ refferdBy: '', totalRfferal: 0, totalReferralCommissions: 0 })\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = [\n        {\n          address: getRefferalAddress(),\n          name: 'getReferrer',\n          params: [account],\n        },\n        {\n          address: getRefferalAddress(),\n          name: 'referralsCount',\n          params: [account],\n        },\n        {\n          address: getRefferalAddress(),\n          name: 'totalReferralCommissions',\n          params: [account],\n        },\n      ]\n\n      const rawResults = await multicall(refferalAbi, calls)\n      console.log(rawResults, 'rawresults')\n      const data = result\n      if (rawResults[0][0] === '0x0000000000000000000000000000000000000000') {\n        data.refferdBy = '-'\n      } else {\n        data.refferdBy = rawResults[0][0]\n      }\n\n      data.totalRfferal = new BigNumber(rawResults[1][0]._hex).toNumber()\n      data.totalReferralCommissions = new BigNumber(rawResults[2][0]._hex).toNumber()\n      //  {\n      //     refferdBy: rawResults[0][0],\n      //     totalRfferal: new BigNumber(rawResults[1][0]._hex),\n      //     totalReferralCommissions: new BigNumber(rawResults[2][0]._hex)\n      // }\n      setResults(data)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh, result])\n\n  return result\n}\n\nexport default useRefferal\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n  'USDT'=\"USDT\",\n  \"DAI\" = \"DAI\"\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  token1?: string\n  token2?: string\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n\nexport const getRefferalAddress = () => {\n  return addresses.refferal[chainId]\n}\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract(erc20 as unknown as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  console.log(calls)\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","export default {\n  cake: {\n    56: '0xf002d64DF02f1710EC99bF7084a55A80D4B1B1d8',\n    97: '0xFd5E9D36Abf74fE59803A251618C7F05aC559642',\n  },\n  masterChef: {\n    56: '0xCef6399a796e894E97930BfC1c6fb9A553162abe',\n    97: '0x19E5FbebEd9ebEaD2e6eF1fbB26718BC825E127f',\n  },\n  wbnb: {\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n  },\n  usdt:{\n    56:\"0x55d398326f99059fF775485246999027B3197955\",\n    97:\"\"\n  },\n  dai:{\n    56:\"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\",\n    97:\"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\"\n  },\n  lottery: {\n    56: '',\n    97: '',\n  },\n  lotteryNFT: {\n    56: '',\n    97: '',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '0xd8a888adf59c21bd0943a4a574d4449edbb0281e',\n  },\n  refferal: {\n    56: '0xA2727E08d05786524C922B28041Cc2954c27bafe',\n    97: '0xa763f13b940310a17D57672BbaA0D7d5640368A1',\n  },\n}\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  // {\n  //   sousId: 0,\n  //   tokenName: 'CAKE',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://pancakeswap.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '10',\n  //   sortOrder: 1,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 1,\n  //   tokenName: 'TWT',\n  //   stakingTokenName: QuoteToken.SYRUP,\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://trustwallet.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n]\n\nexport default pools\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract(masterChefABI as unknown as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingECG('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  // {\n  //   pid: 1,\n  //   risk: 5,\n  //   lpSymbol: 'ECG-USDT LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd1b59d11316e87c3a0a069e80f590ba35cd8d8d3',\n  //   },\n  //   tokenSymbol: 'ECG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xf952fc3ca7325cc27d15885d37117676d25bfda6',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   token1: 'ECG',\n  //   token2: 'USDT',\n  // },\n  // {\n  //   pid: 2,\n  //   risk: 3,\n  //   lpSymbol: 'ECG-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n  //   },\n  //   tokenSymbol: 'ECG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   token1: 'ECG',\n  //   token2: 'BUSD',\n  // },\n  // {\n  //   pid: 5,\n  //   risk: 3,\n  //   lpSymbol: 'BNB-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n  //   },\n  //   tokenSymbol: 'ECG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xa265aD7157BF93a32202d7B4b920dA3BAcB7aE71',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   token1: 'BNB',\n  //   token2: 'BUSD',\n  // },\n  // {\n  //   pid: 6,\n  //   risk: 3,\n  //   lpSymbol: 'BNB-USDT LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n  //   },\n  //   tokenSymbol: 'ECG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xa265aD7157BF93a32202d7B4b920dA3BAcB7aE71',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   token1: 'BNB',\n  //   token2: 'USDT',\n  // },\n\n  {\n    pid: 0,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'ECG',\n    lpAddresses: {\n      97: '0xFd5E9D36Abf74fE59803A251618C7F05aC559642',\n      56: '0x40436182063eb9f901B7721a89E196947206d2bD', // AUTO-BNB LP\n    },\n    tokenSymbol: 'ECG',\n    tokenAddresses: {\n      97: '0xFd5E9D36Abf74fE59803A251618C7F05aC559642',\n      56: '0xf002d64DF02f1710EC99bF7084a55A80D4B1B1d8',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    token1: 'ECG',\n  },\n  {\n    pid: 1,\n    risk: 3,\n    lpSymbol: 'BUSD',\n    lpAddresses: {\n      97: '0xA0C2d558e86ceDA2361a9cE49cF78e83Fa6E8Ef3',\n      56: '0x1B96B92314C44b159149f7E0303511fB2Fc4774f', // AUTO-BNB LP\n    },\n    tokenSymbol: 'BUSD',\n    tokenAddresses: {\n      97: '0xFd5E9D36Abf74fE59803A251618C7F05aC559642',\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    isTokenOnly:true,\n    token1: 'BUSD',\n  },\n  {\n    pid: 2,\n    risk: 3,\n    lpSymbol: 'TUSD',\n    lpAddresses: {\n      97: '0xA0C2d558e86ceDA2361a9cE49cF78e83Fa6E8Ef3',\n      56: '0x2E28b9B74D6d99D4697e913b82B41ef1CAC51c6C', // AUTO-BNB LP\n    },\n    tokenSymbol: 'BUSD',\n    tokenAddresses: {\n      97: '0xFd5E9D36Abf74fE59803A251618C7F05aC559642',\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    isTokenOnly:true,\n    token1: 'TUSD',\n  },\n  {\n    pid: 3,\n    risk: 3,\n    lpSymbol: 'DAI',\n    lpAddresses: {\n      97: '0xA0C2d558e86ceDA2361a9cE49cF78e83Fa6E8Ef3',\n      56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489', // AUTO-BNB LP\n    },\n    tokenSymbol: 'BUSD',\n    tokenAddresses: {\n      97: '0xFd5E9D36Abf74fE59803A251618C7F05aC559642',\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    isTokenOnly:true,\n    token1: 'DAI',\n  },\n  {\n    pid: 4,\n    risk: 3,\n    lpSymbol: 'ECG-BNB LP',\n    lpAddresses: {\n      97: '0xA0C2d558e86ceDA2361a9cE49cF78e83Fa6E8Ef3',\n      56: '0x40436182063eb9f901B7721a89E196947206d2bD', // AUTO-BNB LP\n    },\n    tokenSymbol: 'BNB',\n    tokenAddresses: {\n      97: '0xFd5E9D36Abf74fE59803A251618C7F05aC559642',\n      56: '0x40436182063eb9f901B7721a89E196947206d2bD',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    // isTokenOnly:true,\n    token1: 'ECG',\n    token2:'BNB'\n  },\n  {\n    pid: 5,\n    risk: 3,\n    lpSymbol: 'ECG-USDT LP',\n    lpAddresses: {\n      97: '0xA0C2d558e86ceDA2361a9cE49cF78e83Fa6E8Ef3',\n      56: '0xD3BC6C73035B8cD9d7B84B96284b62E7F5d9491F', // AUTO-BNB LP\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '0xFd5E9D36Abf74fE59803A251618C7F05aC559642',\n      56: '0xD3BC6C73035B8cD9d7B84B96284b62E7F5d9491F',\n    },\n    quoteTokenSymbol: QuoteToken.USDT,\n    quoteTokenAdresses: contracts.usdt,\n    // isTokenOnly:true,\n    token1: 'ECG',\n    token2:'USDT'\n  },\n  {\n    pid: 6,\n    risk: 3,\n    lpSymbol: 'ECG-BUSD LP',\n    lpAddresses: {\n      97: '0xA0C2d558e86ceDA2361a9cE49cF78e83Fa6E8Ef3',\n      56: '0x77730e2e072E4Ef29B7d546EA74180930438761a', // AUTO-BNB LP\n    },\n    tokenSymbol: 'BUSD',\n    tokenAddresses: {\n      97: '0xFd5E9D36Abf74fE59803A251618C7F05aC559642',\n      56: '0x77730e2e072E4Ef29B7d546EA74180930438761a',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    // isTokenOnly:true,\n    token1: 'ECG',\n    token2:'BUSD'\n  },\n  {\n    pid: 7,\n    risk: 3,\n    lpSymbol: 'ECG-DAI LP',\n    lpAddresses: {\n      97: '0xA0C2d558e86ceDA2361a9cE49cF78e83Fa6E8Ef3',\n      56: '0x1c871d2A122bF896E07e10D7F81BB610bDf87235', // AUTO-BNB LP\n    },\n    tokenSymbol: 'DAI',\n    tokenAddresses: {\n      97: '0xFd5E9D36Abf74fE59803A251618C7F05aC559642',\n      56: '0x1c871d2A122bF896E07e10D7F81BB610bDf87235',\n    },\n    quoteTokenSymbol: QuoteToken.DAI,\n    quoteTokenAdresses: contracts.dai,\n    // isTokenOnly:true,\n    token1: 'ECG',\n    token2:'DAI'\n  },\n  {\n    pid: 8,\n    risk: 3,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      97: '0xA0C2d558e86ceDA2361a9cE49cF78e83Fa6E8Ef3',\n      56: '0x1B96B92314C44b159149f7E0303511fB2Fc4774f', // AUTO-BNB LP\n    },\n    tokenSymbol: 'BUSD',\n    tokenAddresses: {\n      97: '0xFd5E9D36Abf74fE59803A251618C7F05aC559642',\n      56: '0x1B96B92314C44b159149f7E0303511fB2Fc4774f',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    // isTokenOnly:true,\n    token1: 'BNB',\n    token2:'BUSD'\n  },\n  {\n    pid: 9,\n    risk: 3,\n    lpSymbol: 'BNB-USDT LP',\n    lpAddresses: {\n      97: '0xA0C2d558e86ceDA2361a9cE49cF78e83Fa6E8Ef3',\n      56: '0x20bCC3b8a0091dDac2d0BC30F68E6CBb97de59Cd', // AUTO-BNB LP\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '0xFd5E9D36Abf74fE59803A251618C7F05aC559642',\n      56: '0x20bCC3b8a0091dDac2d0BC30F68E6CBb97de59Cd',\n    },\n    quoteTokenSymbol: QuoteToken.USDT,\n    quoteTokenAdresses: contracts.usdt,\n    // isTokenOnly:true,\n    token1: 'BNB',\n    token2:'USDT'\n  },\n  // {\n  //   pid: 7,\n  //   risk: 3,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'BUSD',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56', // AUTO-BNB LP\n  //   },\n  //   tokenSymbol: 'ECG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   token1: 'BUSD',\n  // },\n  // {\n  //   pid: 8,\n  //   risk: 3,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'TUSD',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x55d398326f99059fF775485246999027B3197955', // AUTO-BNB LP\n  //   },\n  //   tokenSymbol: 'ECG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x55d398326f99059fF775485246999027B3197955',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   token1: 'TUSD',\n  // },\n  // {\n  //   pid: 9,\n  //   risk: 3,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'DAI',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', // AUTO-BNB LP\n  //   },\n  //   tokenSymbol: 'ECG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   token1: 'DAI',\n  // },\n  // {\n  //   pid: 10,\n  //   risk: 3,\n  //   // isTokenOnly: true,\n  //   lpSymbol: 'ECG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3744ed0834496Aca290799151e7aC8c1aCa085Af', // AUTO-BNB LP\n  //   },\n  //   tokenSymbol: 'ECG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xa265aD7157BF93a32202d7B4b920dA3BAcB7aE71',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   token1: 'ECG',\n  //   token2: 'BNB',\n  // },\n  // {\n  //   pid: 11,\n  //   risk: 3,\n  //   // isTokenOnly: true,\n  //   lpSymbol: 'ECG-USDT LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xCcb02aA6A91B419D9ebaE350C3f043EF1962ccBe', // AUTO-BNB LP\n  //   },\n  //   tokenSymbol: 'ECG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xa265aD7157BF93a32202d7B4b920dA3BAcB7aE71',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   token1: 'ECG',\n  //   token2: 'USDT',\n  // },\n  // {\n  //   pid: 12,\n  //   risk: 3,\n  //   // isTokenOnly: true,\n  //   lpSymbol: 'ECG-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC78AAa1fF8977fE7105630Eb249f894Dd086fB34', // AUTO-BNB LP\n  //   },\n  //   tokenSymbol: 'ECG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xa265aD7157BF93a32202d7B4b920dA3BAcB7aE71',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   token1: 'ECG',\n  //   token2: 'BUSD',\n  // },\n  // {\n  //   pid: 13,\n  //   risk: 3,\n  //   // isTokenOnly: true,\n  //   lpSymbol: 'ECG-DAI LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD5C6Ec60299a9D71205dBeD69367F7D6cA814A0d', // AUTO-BNB LP\n  //   },\n  //   tokenSymbol: 'ECG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xa265aD7157BF93a32202d7B4b920dA3BAcB7aE71',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   token1: 'ECG',\n  //   token2: 'DAI',\n  // },\n]\n\nexport default farms\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract(abi as unknown as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, Skeleton, Text, Button } from '@pancakeswap-libs/uikit'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\nconst StyledTotalValueLockedCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  background-repeat: no-repeat;\n  background-position: 95% center;\n  //   background-size:120px;\n`\n\nconst RefferalLink = () => {\n  const { account } = useWallet()\n\n  return (\n    <StyledTotalValueLockedCard>\n      <CardBody>\n        <Heading style={{ fontSize: '2.5em' }} mb=\"24px\">\n          Referral Link\n        </Heading>\n\n        <Text style={{ fontSize: '1.5em' }}>Click on Button to copy your referral link</Text>\n        <br />\n        <CopyToClipboard text={`${window.location.href}?ref=${account}`} onCopy={() => console.log('Copied')}>\n          <Button fullWidth>{`${window.location.href}?ref=${account}`.slice(0, 50)}</Button>\n        </CopyToClipboard>\n      </CardBody>\n    </StyledTotalValueLockedCard>\n  )\n}\n\nexport default RefferalLink\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  prefix?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold fontSize={fontSize}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useGetStats } from 'hooks/api'\nimport useRefferal from 'hooks/useRefferal'\nimport CardValue from './CardValue'\n\nconst StyledTotalValueLockedCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  background-repeat: no-repeat;\n  background-position: 95% center;\n  //   background-size:120px;\n  width: 100%;\n`\n\nconst RefferalCard = () => {\n  const TranslateString = useI18n()\n  // const data = useGetStats()\n  const totalRfferal = useRefferal()\n  // const tvl = totalValue.toFixed(2);\n  return (\n    <StyledTotalValueLockedCard>\n      <CardBody>\n        {console.log(totalRfferal, 'totalValue')}\n        <Heading size=\"lg\" style={{ fontSize: '2.5em' }} mb=\"24px\">\n          Referral Details\n        </Heading>\n        {totalRfferal && (\n          <>\n            <Text style={{ fontSize: '1.5em' }} color=\"text\">\n              Total Referral Earnings\n            </Text>\n            <CardValue fontSize=\"4em\" value={totalRfferal.totalReferralCommissions} />\n          </>\n        )}\n        {totalRfferal && (\n          <>\n            <Text style={{ fontSize: '1.5em' }} color=\"text\">\n              Total Referral\n            </Text>\n            <CardValue fontSize=\"2.5em\" value={totalRfferal.totalRfferal} decimals={0} />\n          </>\n        )}\n        {totalRfferal && (\n          <>\n            <Text style={{ fontSize: '1.5em' }} color=\"text\">\n              Referred By\n            </Text>\n\n            <Text color=\"textSubtle\">{totalRfferal.refferdBy} </Text>\n          </>\n        )}\n      </CardBody>\n    </StyledTotalValueLockedCard>\n  )\n}\n\nexport default RefferalCard\n","import React from 'react'\nimport { Card, CardBody, Heading, Text, Button } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\n\nconst StyledInvitingCard = styled(Card)`\n  margin: 1.5rem 1.5rem 1.5rem 1.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  border-radius: 32px;\n  background-color: #0c1f3c;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    // margin: 0 1rem 0 1rem;\n  }\n`\n\nconst RefferalCard3 = () => {\n  return (\n    <StyledInvitingCard style={{ background: '#0c1f3c', textAlign: 'center' }}>\n      <CardBody style={{ background: '#0c1f3c' }}>\n        <img src=\"/images/airdrop.png\" alt=\"jf\" style={{ margin: 'auto', width: '150px', display: 'block' }} />\n        {/* <Text style={{marginTop:\"20px\"}}>Earn ECG</Text> */}\n        <Heading style={{ margin: '1rem 0 1rem 0', color: '#fff' }}>Earn ECG</Heading>\n        <Text style={{ marginTop: '10px', color: '#c0c0c0' }}>Recieve referral rewards in ECG </Text>\n        <Text style={{ marginTop: '10px', color: '#c0c0c0' }}>token from your friends earnings</Text>\n        {/* <Button fullWidth>Start Inviting</Button> */}\n      </CardBody>\n    </StyledInvitingCard>\n  )\n}\n\nexport default RefferalCard3\n","import React from 'react'\nimport { Card, CardBody, Heading, Text, Button } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\n\nconst StyledInvitingCard = styled(Card)`\n  margin: 1.5rem 1.5rem 1.5rem 1.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  border-radius: 32px;\n  background-color: #0c1f3c;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    // margin: 0 1rem 0 1rem;\n  }\n`\n\nconst RefferalCard2 = () => {\n  return (\n    <StyledInvitingCard style={{ background: '#0c1f3c', textAlign: 'center' }}>\n      <CardBody style={{ background: '#0c1f3c' }}>\n        <img src=\"/images/invite.png\" alt=\"jf\" style={{ margin: 'auto', width: '150px', display: 'block' }} />\n        {/* <Text style={{marginTop:\"20px\"}}>Earn ECG</Text> */}\n        <Heading style={{ margin: '1rem 0 1rem 0', color: '#fff' }}>Invite Friends</Heading>\n        <Text style={{ marginTop: '10px', color: '#c0c0c0' }}>Invite your friends to register </Text>\n        <Text style={{ marginTop: '10px', color: '#c0c0c0' }}>via your refferal link</Text>\n        {/* <Button fullWidth>Start Inviting</Button> */}\n      </CardBody>\n    </StyledInvitingCard>\n  )\n}\n\nexport default RefferalCard2\n","import React from 'react'\nimport { Card, CardBody, Heading, Text, Button } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\n\nconst StyledInvitingCard = styled(Card)`\n  margin: 1.5rem 1.5rem 1.5rem 1.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  border-radius: 32px;\n  background-color: #0c1f3c;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    // margin: 0 1rem 0 1rem;\n  }\n`\n\nconst RefferalCard1 = () => {\n  return (\n    <StyledInvitingCard style={{ background: '#0c1f3c', textAlign: 'center' }}>\n      <CardBody style={{ background: '#0c1f3c' }}>\n        <img src=\"/images/link.png\" alt=\"jf\" style={{ margin: 'auto', width: '150px', display: 'block' }} />\n        {/* <Text style={{marginTop:\"20px\"}}>Earn ECG</Text> */}\n        <Heading style={{ margin: '1rem 0 1rem 0', color: '#fff' }}>Get a referral link</Heading>\n        <Text style={{ marginTop: '10px', color: '#c0c0c0' }}>Connect a wallet and generate your</Text>\n        <Text style={{ marginTop: '10px', color: '#c0c0c0' }}>referral link in the Referral section.</Text>\n        {/* <Button fullWidth>Start Inviting</Button> */}\n      </CardBody>\n    </StyledInvitingCard>\n  )\n}\n\nexport default RefferalCard1\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout, Image, Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport FarmStakingCard from './components/FarmStakingCard'\nimport LotteryCard from './components/LotteryCard'\nimport CakeStats from './components/CakeStats'\nimport TotalValueLockedCard from './components/TotalValueLockedCard'\nimport TwitterCard from './components/TwitterCard'\nimport RefferalLink from './components/RefferalLink'\nimport RefferalCard from './components/Refferals'\nimport StartFarming from './components/StartFarming'\nimport StartInviting from './components/StartInviting'\nimport AddLiquik from './components/AddLiquik'\nimport Bottom from './components/Bottom'\nimport Foot from './components/Foot'\nimport RefferalCard3 from './components/RefferalCardno3'\nimport RefferalCard2 from './components/RefferalCardno2'\nimport RefferalCard1 from './components/RefferalCardno1'\n\nconst Hero = styled.div`\n  align-items: center;\n  // background-image: url('/images/egg/3.png');\n  // background-repeat: no-repeat;\n  // background-position: top center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  padding-top: 1rem;\n  // text-align: center;\n\n  // ${({ theme }) => theme.mediaQueries.lg} {\n  //   // background-image: url('/images/egg/3.png'), url('/images/egg/3b.png');\n  //   // background-position: left center, right center;\n  //   height: 165px;\n  //   padding-top: 0;\n  // }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 2rem;\n    flex-direction: row;\n  }\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 48px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\nconst Div = styled.div`\n  display: flex;\n  margin-bottom: 2rem;\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\nconst Row = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`\nconst Middle = styled.div`\n  margin: 2rem 0 2rem 1rem;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 1rem 0 1rem;\n  }\n`\n\nconst Refferal: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Page>\n      <Hero>\n        {/* <Heading as=\"h1\" size=\"xl\" mb=\"24px\" color=\"secondary\">\n          {TranslateString(576, 'Goose Finance')}\n        </Heading>\n        <Text>{TranslateString(578, 'Top 3 best DEFI app on Binance Smart Chain.')}</Text> */}\n        {/* <img src=\"/images/logowithtext.png\" alt=\"E logo\" /> */}\n        {/* <div>\n          <p style={{ color: 'white', fontSize: '2.5rem' }}>\n            The First DEX on BSC & Matic network with a three-type referral system\n          </p>\n          <Text fontSize=\"1.5rem\" style={{ marginTop: '2rem', color: '#0F52BA' }}>\n            Enjoy profitable yield farming and exchanges with the lowest fees in DeFi space\n          </Text>\n        </div>\n        <Image src=\"images/robot.png\" alt=\"robot\" width={177} height={280} /> */}\n      </Hero>\n      {/* <Div>\n        <StartFarming />\n        <StartInviting />\n        <AddLiquik />\n      </Div> */}\n      {/* <div>\n        <Cards>\n          <FarmStakingCard />\n          <TwitterCard />\n          <CakeStats />\n          <TotalValueLockedCard />\n        </Cards>\n      </div> */}\n      <Div>\n        <div>\n          <p style={{ color: 'white', fontSize: '2.5rem' }}>Invite your friends.</p>\n          <p style={{ color: 'white', fontSize: '2.5rem' }}>Earn cryptocurrency together</p>\n          <br />\n          <Text>Earn a certain commission reward from your\n            friends swaps on echangy and 5% from their\n            earnings on Farms & Launchpools.</Text>\n          {/* <Text fontSize=\"1.5rem\" style={{marginTop:\"2rem\",color:\"#0F52BA\"}}>Earn a certain commission reward from friends swaps on Echangy and 5% from their earnings on Farms & Launchpools</Text> */}\n          {/* <Button style={{ background: 'blue', marginTop: '2rem' }}>Invite Friends</Button> */}\n        </div>\n        <Image src=\"/images/image.png\" alt=\"hf\" width={367} height={327} />\n      </Div>\n      <Cards>\n        <RefferalCard />\n        <RefferalLink />\n      </Cards>\n      <Row>\n        <Heading>How to invite friends</Heading>\n      </Row>\n      <Div style={{ marginTop: '2rem' }}>\n        {/* <img src=\"/images/link.png\" alt=\"jf\" style={{marginRight:\"auto\"}} /> */}\n        <RefferalCard1 />\n        {/* <Image src=\"/images/invite.png\" alt=\"jf\" width={367} height={267} /> */}\n        {/* <Middle>\n          <img src=\"/images/invite.png\" alt=\"v\" style={{height:\"20rem\"}} />\n        </Middle> */}\n        <RefferalCard2 />\n        <RefferalCard3 />\n        {/* <img src=\"/images/quick.png\" alt=\"jf\"  style={{marginLeft:\"auto\"}} /> */}\n      </Div>\n      {/* <Bottom /> */}\n      {/* <Foot /> */}\n    </Page>\n  )\n}\n\nexport default Refferal\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\nimport { useFarms, usePriceCakeBusd } from '../../../state/hooks'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst CakeStats = () => {\n  const TranslateString = useI18n()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = useBurnedBalance(getCakeAddress())\n  const farms = useFarms()\n  const eggPrice = usePriceCakeBusd()\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0)\n  const cakeSupply = getBalanceNumber(circSupply)\n  const marketCap = eggPrice.times(circSupply)\n\n  let ecgPerBlock = 0;\n  if(farms && farms[0] && farms[0].ecgPerBlock){\n    ecgPerBlock = new BigNumber(farms[0].ecgPerBlock).div(new BigNumber(10).pow(18)).toNumber();\n  }\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(534, 'Egg Stats')}\n        </Heading>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(10005, 'Market Cap')}</Text>\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(marketCap)} decimals={0} prefix=\"$\" />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(536, 'Total Minted')}</Text>\n          {totalSupply && <CardValue fontSize=\"14px\" value={getBalanceNumber(totalSupply)} decimals={0} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(538, 'Total Burned')}</Text>\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(burnedBalance)} decimals={0} />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(10004, 'Circulating Supply')}</Text>\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} decimals={0} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(540, 'New EGG/block')}</Text>\n          <Text bold fontSize=\"14px\">{ecgPerBlock}</Text>\n        </Row>\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout, Image, Button, Flex, Card, CardBody } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport CakeStats from 'views/Refferal/components/CakeStats'\n\nconst Cards = styled(BaseLayout)`\nalign-items: stretch;\njustify-content: stretch;\nmargin-bottom: 48px;\n\n& > div {\n  grid-column: span 6;\n  width: 100%;\n}\n\n${({ theme }) => theme.mediaQueries.sm} {\n  & > div {\n    grid-column: span 8;\n  }\n}\n\n${({ theme }) => theme.mediaQueries.lg} {\n  & > div {\n    grid-column: span 6;\n  }\n}\n`\n\n\nconst Aboutexchange: React.FC = () => {\n\n\n    const TranslateString = useI18n()\n\n    return (\n        <Page>\n            <Cards>\n                <div>\n                    <div>\n                        <p style={{ color: 'white', fontSize: '2.5rem' }}>\n                            The First DEX on multichain with a referral system.\n                        </p>\n                        <Text fontSize=\"1.5rem\" style={{ marginTop: '2rem', color: '#0F52BA' }}>\n                            Enjoy profitable yield farming and exchanges with the lowest fees in DeFi space\n                        </Text>\n                    </div>\n                    <Flex style={{ marginTop: \"20px\" }}>\n                        <div style={{ display: \"flex\" }}>\n                            <img src=\"/images/bnb.png\" alt=\"bsc\" style={{ width: \"50px\" }} />\n                            <Button as=\"a\" href=\"https://swap.echangy.com/#/swap?outputCurrency=0xa265aD7157BF93a32202d7B4b920dA3BAcB7aE71\">\n                                BUY ECG\n                            </Button>\n                        </div>\n                        <div style={{ display: \"flex\" }}>\n                            <img src=\"/images/polygon.png\" alt=\"bsc\" style={{ width: \"50px\" }} />\n\n                            <Button as=\"a\" href=\"https://polygonswap.echangy.com/#/swap?outputCurrency=0xa265aD7157BF93a32202d7B4b920dA3BAcB7aE71\">\n                                BUY ECG\n                            </Button>\n                        </div>\n                    </Flex>\n                </div>\n                <div>\n                    <img src=\"/images/robot.png\" alt=\"robot\" style={{ width: \"50%\", margin: \"auto\", display: \"block\" }} />\n                </div>\n            </Cards>\n            <Cards>\n                <CakeStats />\n\n                {/* \n                <div>\n                    <Flex>\n                        <Heading>\n                            Token Name :\n                        </Heading>\n                        <Heading>\n                            ECHANGY Token\n                        </Heading>\n                    </Flex>\n                    <br />\n                    <Flex>\n                        <Heading>\n                            Token Symbol :\n                        </Heading>\n                        <Heading>\n                            ECG\n                        </Heading>\n                    </Flex>\n                    <br />\n                    <Flex>\n                        <Heading>\n                            BSC Contract\n                        </Heading>\n\n                    </Flex>\n                    <Heading>\n                        0xa265aD7157BF93a32202d7B4b920dA3BAcB7aE71\n                    </Heading>\n                    <br />\n                    <Flex>\n                        <Heading>\n                            Polygon Contract\n                        </Heading>\n\n                    </Flex>\n                    <Heading>\n                        0xa265aD7157BF93a32202d7B4b920dA3BAcB7aE71\n                    </Heading>\n                    <br />\n                </div> */}\n                {/* <div>\n                    <img src=\"/images/graph.png\" alt=\"graph\" style={{ width: \"120%\" }} />\n                </div> */}\n            </Cards>\n            <div>\n                <Text fontSize=\"3rem\">\n                    ECG Token Opportunities\n                </Text>\n                <Cards>\n                    <Card>\n                        <img src=\"/images/c1.png\" alt=\"card1\" style={{ width: \"100%\" }} />\n                        <CardBody>\n                            <Text fontSize=\"2rem\">\n                                Trading\n                            </Text>\n                            <Text color=\"#0096FF\">\n                                Easily trade ECG Token on the platform with the lowest transaction\n                                fees in the DeFi space-Echangy.\n                            </Text>\n\n                        </CardBody>\n                    </Card>\n                    <Card>\n                        <img src=\"/images/c2.png\" alt=\"card1\" style={{ width: \"100%\" }} />\n                        <CardBody>\n                            <Text fontSize=\"2rem\">\n                                Echangy Launchpools\n                            </Text>\n                            <Text color=\"#0096FF\">\n                                Stake your ECG tokens in Echangy Launchpools\n                                and earn other token for free\n                            </Text>\n\n                        </CardBody>\n                    </Card>\n                    <Card>\n                        <img src=\"/images/c3.png\" alt=\"card1\" style={{ width: \"100%\" }} />\n                        <CardBody>\n                            <Text fontSize=\"2rem\">\n                                Echangy Farms\n                            </Text>\n                            <Text color=\"#0096FF\">\n                                Stake your Liquidity provider token in\n                                Echangy Farms pairs and recieve ECG\n                                token in return\n                            </Text>\n\n                        </CardBody>\n                    </Card>\n                    <Card>\n                        <img src=\"/images/c4.png\" alt=\"card1\" style={{ width: \"100%\" }} />\n                        <CardBody>\n                            <Text fontSize=\"2rem\">\n                                Referral Commission\n                            </Text>\n                            <Text color=\"#0096FF\">\n                                Recieve 5% from your friends` earning\n                                in farms & Launchpools\n                                in the form of ECG token\n                            </Text>\n\n                        </CardBody>\n                    </Card>\n                    <Card>\n                        <img src=\"/images/c5.png\" alt=\"card1\" style={{ width: \"100%\" }} />\n                        <CardBody>\n                            <Text fontSize=\"2rem\">\n                                Liquidity Provider Fee\n                            </Text>\n                            <Text color=\"#0096FF\">\n                                Add ECG tokens along with other tokens\n                                to the liquidity pools on echangy\n                            </Text>\n\n                        </CardBody>\n                    </Card>\n                </Cards>\n            </div>\n            <hr />\n\n            <Cards>\n                <div>\n                    <img src=\"/images/egg/9.png\" alt=\"logo\" style={{ width: \"50%\", display: \"block\", margin: \"auto\" }} />\n                </div>\n                <div>\n                    <Text fontSize=\"2rem\">\n                        Want to integrate your ECG token into your platform/service\n                    </Text>\n                    <Text color=\"#0096FF\">\n                        get in touch with us via cooperation@echangy.com and the team\n                        will be carefully analyze the possibility of connecting your\n                        project. The best products based on your initial review will be added\n                        to the list of ECG Token Opportunities and will get the marketing boot\n                        in the form of promotion across our social media profiles accounting\n                        for more then 430,000 users.\n                    </Text>\n                </div>\n            </Cards>\n            <hr />\n            <Text fontSize=\"2rem\" style={{ textAlign: \"center\" }}>\n                Become a holder of the token that supports the Echangy ecosystem.\n            </Text>\n            <Flex style={{ marginTop: \"20px\" }}>\n                <div style={{ display: \"flex\" }}>\n                    <img src=\"/images/bnb.png\" alt=\"bsc\" style={{ width: \"50px\" }} />\n                    <Button as=\"a\" href=\"https://swap.echangy.com/#/swap?outputCurrency=0xa265aD7157BF93a32202d7B4b920dA3BAcB7aE71\">\n                        BUY ECG\n                    </Button>\n                </div>\n                <div style={{ display: \"flex\" }}>\n                    <img src=\"/images/polygon.png\" alt=\"bsc\" style={{ width: \"50px\" }} />\n\n                    <Button as=\"a\" href=\"https://polygonswap.echangy.com/#/swap?outputCurrency=0xa265aD7157BF93a32202d7B4b920dA3BAcB7aE71\">\n                        BUY ECG\n                    </Button>\n                </div>\n            </Flex>\n        </Page >\n    )\n}\n\nexport default Aboutexchange\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  ZHCN,\n  ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`)\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then((r) => r.json())\n        // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error('ERROR')\n          console.error(e)\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://swap.echangy.com/#/swap?outputCurrency=0xa265aD7157BF93a32202d7B4b920dA3BAcB7aE71', // 'https://exchange.goosedefi.com/',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://swap.echangy.com/#/add/', //  'https://exchange.goosedefi.com/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Farming',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Staking',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: 'Refferal Program',\n    icon: 'GroupsIcon',\n    href: '/refferal',\n  },\n  {\n    label: 'Airdrop',\n    icon: 'TicketIcon',\n    href: '/airdrop',\n  },\n  // {\n  //   label: 'Pools',\n  //   icon: 'PoolIcon',\n  //   href: '/pools',\n  // },\n  {\n    label: 'About Exchange',\n    icon: 'NftIcon',\n    href: '/about-exchange',\n  },\n  // {\n  //   label: 'Info',\n  //   icon: 'InfoIcon',\n  //   items: [\n  //     {\n  //       label: 'PancakeSwap',\n  //       href: 'https://pancakeswap.info/token/0xF952Fc3ca7325Cc27D15885d37117676d25BfdA6',\n  //     },\n  //     {\n  //       label: 'CoinGecko',\n  //       href: 'https://www.coingecko.com/en/coins/goose-finance',\n  //     },\n  //     {\n  //       label: 'CoinMarketCap',\n  //       href: 'https://coinmarketcap.com/currencies/goose-finance/',\n  //     },\n  //     {\n  //       label: 'AstroTools',\n  //       href: 'https://app.astrotools.io/pancake-pair-explorer/0x19e7cbecdd23a16dfa5573df54d98f7caae03019',\n  //     },\n  //   ],\n  // },\n  {\n    label: 'Price Charts',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Github',\n        href: '', // 'https://github.com/goosedefi/',\n      },\n      {\n        label: 'Docs',\n        href: '', // 'https://goosedefi.gitbook.io/goose-finance/',\n      },\n      {\n        label: 'Blog',\n        href: '', // 'https://goosefinance.medium.com/',\n      },\n    ],\n  },\n  // {\n  //   label: 'Partnerships/IFO',\n  //   icon: 'GooseIcon',\n  //   href: 'https://docs.google.com/forms/d/e/1FAIpQLSe7ycrw8Dq4C5Vjc9WNlRtTxEhFDB1Ny6jlAByZ2Y6qBo7SKg/viewform?usp=sf_link',\n  // },\n  // {\n  //   label: 'Audit by Hacken',\n  //   icon: 'AuditIcon',\n  //   href: 'https://www.goosedefi.com/files/hackenAudit.pdf',\n  // },\n  // {\n  //   label: 'Audit by CertiK',\n  //   icon: 'AuditIcon',\n  //   href: 'https://certik.org/projects/goose-finance',\n  // },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      priceLink=\"\"\n      networkName=\"BNB\"\n      networkLink=\"https://polygon.echangy.com\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport Refferal from 'views/Refferal'\nimport Aboutexchange from 'views/Aboutexchange'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\nimport NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\n// const Lottery = lazy(() => import('./views/Lottery'))\n// const Pools = lazy(() => import('./views/Pools'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\nconst Airdrop = lazy(() => import('./views/Airdrop'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n    const param = new URLSearchParams(window.location.search).getAll(\"ref\");\n    console.log(window.location);\n    if(param.length>0){\n      localStorage.setItem(\"ref\", param[0])\n    }\n\n    console.log(param, \"params\");\n  }, [account, connect])\n\n  useFetchPublicData()\n\n\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Farms tokenMode />\n            </Route>\n            <Route path=\"/airdrop\">\n              <Airdrop />\n            </Route>\n\n            <Route path=\"/refferal\">\n              <Refferal />\n            </Route>\n            <Route path=\"/about-exchange\">\n              <Aboutexchange />\n            </Route>\n            {/* <Route path=\"/pools\"> */}\n            {/*  <Pools /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/lottery\"> */}\n            {/*  <Lottery /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/ifo\"> */}\n            {/*  <Ifos /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/nft\"> */}\n            {/*  <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/syrup\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n      {/* <NftGlobalNotification /> */}\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID)\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport axios from \"axios\"\n\n\n\nconst useGetPriceData = () => {\n  const [data, setData] = useState<BigNumber>(new BigNumber(0))\n  const API_URL = \"https://api.dex.guru/v1/tokens/0xf002d64DF02f1710EC99bF7084a55A80D4B1B1d8-bsc\"\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const resp = await axios.get(API_URL);\n      // axios.get(API_URL).then((re)=>{\n      //   setCakePriceBusd(new BigNumber(re.data.data.price))\n      // });\n      console.log(resp.data.priceUSD,\"price\");\n\n      setData(new BigNumber(resp.data.priceUSD))\n    }\n\n    fetchData()\n  }, [])\n\n  return data\n}\n\nexport default useGetPriceData","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport axios from \"axios\"\n\n\n\nconst useGetBNBPriceData = () => {\n  const [data, setData] = useState<BigNumber>(new BigNumber(0))\n  const API_URL = \"https://api.pancakeswap.info/api/v2/tokens/0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const resp = await axios.get(API_URL);\n      // axios.get(API_URL).then((re)=>{\n      //   setCakePriceBusd(new BigNumber(re.data.data.price))\n      // });\n      console.log(resp.data.data.price,\"price\");\n\n      setData(new BigNumber(resp.data.data.price))\n    }\n\n    fetchData()\n  }, [])\n\n  return data\n}\n\nexport default useGetBNBPriceData","import BigNumber from 'bignumber.js'\nimport { useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\nimport { QuoteToken } from '../config/constants/types'\nimport useGetPriceData from './fetchTokenPrice'\nimport useGetBNBPriceData from './fetchBNBPrice'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    // dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const\n  useFarmFromPid = (pid): Farm => {\n    const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n    return farm\n  }\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  // const pid = 5 // BUSD-BNB LP\n  // const farm = useFarmFromPid(pid)\n  // console.log(farm, \"bnbn\")\n  // return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n\n  const price = useGetBNBPriceData();\n  return price;\n}\n\nexport const usePriceCakeBusd = (): BigNumber  => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  // const pid = 10 // EGG-BUSD LP\n  // const farm = useFarmFromPid(pid)\n  // console.log(farm,\"bnbn\")\n  // return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n  const price = useGetPriceData();\n  return price;\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms()\n  const bnbPrice = usePriceBnbBusd()\n  const cakePrice = usePriceCakeBusd()\n\n\n  console.log(bnbPrice.toNumber(), cakePrice.toNumber(), \"bnbn\")\n  let value = new BigNumber(0)\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = cakePrice.times(farm.lpTotalInQuoteToken)\n      } else {\n        val = farm.lpTotalInQuoteToken\n      }\n      value = value.plus(val)\n    }\n  }\n  return value\n}\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n"],"sourceRoot":""}